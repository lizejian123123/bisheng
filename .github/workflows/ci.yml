name: CI 

on:
  push:
    branches:
      - 'main'
  release:
    types: [published]

env:
  ALIYUN_REGISTRY: crpi-7u9ufs69jsthup8p.cn-hangzhou.personal.cr.aliyuncs.com
  ALIYUN_REPO: tts2024xz/bisheng

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Aliyun Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.ALIYUN_REGISTRY }}
          username: ${{ secrets.ALIYUN_REGISTRY_USER }}
          password: ${{ secrets.ALIYUN_REGISTRY_PASSWORD }}

      - name: Set tag
        id: set_tag
        run: |
          if [[ "${{ github.event_name }}" == "release" ]]; then
            echo "::set-output name=tag::${{ github.event.release.tag_name }}"
          else
            echo "::set-output name=tag::latest"
          fi

      - name: Build and push backend
        uses: docker/build-push-action@v2
        with:
          context: ./src/backend
          file: ./src/backend/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ env.ALIYUN_REGISTRY }}/${{ env.ALIYUN_REPO }}-backend:${{ steps.set_tag.outputs.tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push frontend
        uses: docker/build-push-action@v2
        with:
          context: ./src/frontend
          file: ./src/frontend/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ env.ALIYUN_REGISTRY }}/${{ env.ALIYUN_REPO }}-frontend:${{ steps.set_tag.outputs.tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Process git message
        id: process_message
        run: |
          value=$(echo "${{ github.event.head_commit.message }}" | sed -e ':a' -e 'N' -e '$!ba' -e 's/\n/%0A/g')
          value=$(echo "${value}" | sed -e ':a' -e 'N' -e '$!ba' -e 's/\r/%0A/g')
          echo "message=${value}" >> $GITHUB_ENV
        shell: bash
